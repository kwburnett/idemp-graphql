directive @dateFormat on FIELD_DEFINITION
scalar Object

type PagingInfo {
  totalPages: Int!
  totalCount: Int!
  hasNextPage: Boolean!
  page: Int!
  pageSize: Int!
}

type Query {
  # Accounts
  accounts(filter: String, sort: String, page: Int, pageSize: Int): AccountConnection!
  # Business Partners
  businessPartner(id: String!): BusinessPartner
  customers(filter: String, sort: String, page: Int, pageSize: Int): BusinessPartnerConnection!
  vendors(filter: String, sort: String, page: Int, pageSize: Int): BusinessPartnerConnection!
  # Charges
  charge(id: String!): Charge
  expenseCategories(filter: String, sort: String, page: Int, pageSize: Int): ChargeConnection!
  # Home Screen Buttons
  homeScreenButtons: [HomeScreenButton!]
  # Invoices
  customerInvoices(filter: String, sort: String, page: Int, pageSize: Int): InvoiceConnection!
  invoice(id: String!): Invoice
  vendorInvoices(filter: String, sort: String, page: Int, pageSize: Int): InvoiceConnection!
  # Orders
  purchaseOrders(filter: String, sort: String, page: Int, pageSize: Int): OrderConnection!
  order(id: String!): Order
  salesOrders(filter: String, sort: String, page: Int, pageSize: Int): OrderConnection!
  # Payments
  payment(id: String!): Payment
  serviceDebtPayments(filter: String, sort: String, page: Int, pageSize: Int): PaymentConnection!
  # Processes
  generateReport(processInfo: ProcessInfoInput!): String
  process(id: String!): Process
  processes(filter: String, sort: String, page: Int, pageSize: Int): ProcessConnection!
  # Products
  items(filter: String, sort: String, page: Int, pageSize: Int): ProductConnection!
  product(id: String!): Product
  services(filter: String, sort: String, page: Int, pageSize: Int): ProductConnection!
  # Product Categories
  productCategories: [ProductCategory!]!
  # Reference Lists
  invoicePaymentTypes: [ReferenceList!]!
  nhifRelationships: [ReferenceList!]!
  nhifTypes: [ReferenceList!]!
  orderPaymentTypes: [ReferenceList!]!
  patientTypes: [ReferenceList!]!
  productCategoryTypes: [ReferenceList!]!
  referrals: [ReferenceList!]!
  # Storage on hand
  allStorageOnHand(filter: String, sort: String, page: Int, pageSize: Int): StorageOnHandConnection!
  # Users
  acceptTermsOfUse: User!
}

type Mutation {
  # Authentication
  changePassword(credentials: AuthenticationData!): AuthenticationResponse
  signIn(credentials: AuthenticationData!): AuthenticationResponse
  # Business Partner
  saveCustomer(businessPartner: BusinessPartnerInput!): BusinessPartner!
  saveVendor(businessPartner: BusinessPartnerInput!): BusinessPartner!
  # Charges
  saveExpenseCategory(charge: ChargeInput!): Charge!
  # Invoices
  deleteInvoice(id: String!): Boolean!
  processInvoice(id: String!): Invoice!
  saveCustomerInvoice(invoice: InvoiceInput!, shouldProcess: Boolean = true): Invoice!
  saveVendorInvoice(invoice: InvoiceInput!, shouldProcess: Boolean = true): Invoice!
  # Orders
  processOrder(id: String!): Order!
  savePurchaseOrder(order: OrderInput!, shouldProcess: Boolean = true): Order!
  saveSalesOrder(order: OrderInput!, shouldProcess: Boolean = true): Order!
  # Payments
  saveServiceDebtPayment(payment: PaymentInput!): Payment!
  # Products
  saveItem(product: ProductInput): Product!
  saveService(product: ProductInput): Product!
  # Storage on hand
  updateStorageOnHand(storageOnHand: StorageOnHandInput!): StorageOnHand!
}

schema {
  query: Query
  mutation: Mutation
}
